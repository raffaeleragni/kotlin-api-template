
server:
  port: 8080
  http2:
    enabled: true
  compression:
    enabled: true
    mimeTypes: text/xml, text/css, text/html, application/json
    minResponseSize: 1024

spring:
  profiles:
    active: production

  application:
    name: API Template
    version: ${APP_VERSION:1.0.0}

  liquibase:
    enabled: false
    change-log: classpath:/db/changelog.xml

  datasource:
    url: jdbc:postgresql://${API_DB_HOSTNAME:localhost}/${API_DB_NAME:api}?socketTimeout=60&connectTimeout=10&reWriteBatchedInserts=true
    username: ${API_DB_USERNAME:postgres}
    password: ${API_DB_PASSWORD:postgres}
    hikari:
      minimumIdle: ${HIKARI_MINIMUM_IDLE:1}
      maximumPoolSize: ${HIKARI_MAXIMUM_POOL_SIZE:5}
  jpa:
    hibernate:
      format_sql: true
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
        globally_quoted_identifiers: true
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 50
    open-in-view: false

  redis:
    host: ${API_REDIS_HOST:localhost}
    port: ${API_REDIS_PORT:6379}
    password: ${API_REDIS_PASSWORD:}
    lettuce:
      pool:
        max-active: 200
        max-idle: 10
        min-idle: 5
        max-wait: 50ms
        shutdown-timeout: 200ms

queues:
  sample:
    name: "${API_QUEUE_SAMPLE:default-sample-queue-name}"

notifications:
  sample:
    name: "${API_NOTIFICATION_SAMPLE:default-sample-notification-name}"

cloud:
  aws:
    stack:
      auto: false
    region:
      auto: false
      static: ${AWS_REGION:eu-west-1}

management:
  endpoints:
    enabled-by-default: false
    web:
      base-path: /
      exposure:
        include: "*"
      path-mapping:
        info: /health/check/lb
        health: /health/check
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
    prometheus:
      enabled: true
